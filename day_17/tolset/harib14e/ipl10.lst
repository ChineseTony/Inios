     1 00000000                                 ; haribote-ipl
     2 00000000                                 ; TAB=4
     3  = 0000000A                              CYLS	EQU		10
     4 00000000                                 
     5                                          		ORG		0x7c00			; 指明程序的装载地址
     6 00007C00                                 
     7 00007C00                                 ; 以下这段是标准FAT12格式软盘专用的代码
     8 00007C00                                 
     9 00007C00 EB 4E                           		JMP		entry
    10 00007C02 90                              		DB		0x90
    11 00007C03 48 45 4C 4C 4F 49 50 4C         		DB		"HELLOIPL"		;	启动区的名称可以是任意的字符串（8字节）
    12 00007C0B 0200                            		DW		512				;	每个扇区（sector）的大小（必须为512字节）
    13 00007C0D 01                              		DB 		1				;	簇（cluster）的大小（必须为1个扇区）
    14 00007C0E 0001                            		DW		1				;	FAT的起始位置（一般从第一个扇区开始）
    15 00007C10 02                              		DB		2				;	FAT的个数（必须为2）
    16 00007C11 00E0                            		DW		224				;	根目录的大小（一般设成224项）
    17 00007C13 0B40                            		DW		2880			;	该磁盘的大小（必须是2880扇区）
    18 00007C15 F0                              		DB		0xf0			;	磁盘的种类（必须是0xf0）
    19 00007C16 0009                            		DW		9				;	FAT的长度（必须是9扇区）
    20 00007C18 0012                            		DW		18				;	1个磁道（track）有几个扇区（必须是18）
    21 00007C1A 0002                            		DW		2				;	磁头数（必须是2）
    22 00007C1C 00000000                        		DD		0				;	不适用分区，必须是0
    23 00007C20 00000B40                        		DD		2880			;	重写一次磁盘大小
    24 00007C24 00 00 29                        		DB		0,0,0x29		;	意义不明，固定
    25 00007C27 FFFFFFFF                        		DD		0xffffffff		;	(可能是) 卷标号码
    26 00007C2B 48 45 4C 4C 4F 2D 4F 53 20 20   		DB		"HELLO-OS   "	;	磁盘的名称（11字节）
       00007C35 20 
    27 00007C36 46 41 54 31 32 20 20 20         		DB		"FAT12   "		;	磁盘格式名称（8字节）
    28 00007C3E 00 00 00 00 00 00 00 00 00 00   		RESB	18				;	先空出18字节
       00007C48 00 00 00 00 00 00 00 00 
    29 00007C50                                 
    30 00007C50                                 ; 程序主体
    31 00007C50                                 
    32 00007C50                                 entry:
    33 00007C50 B8 0000                         		MOV		AX,0			;  初始化寄存器
    34 00007C53 8E D0                           		MOV		SS,AX
    35 00007C55 BC 7C00                         		MOV		SP,0x7c00
    36 00007C58 8E D8                           		MOV		DS,AX
    37 00007C5A                                 
    38 00007C5A                                 ; 读盘
    39 00007C5A                                 
    40 00007C5A B8 0820                         		MOV		AX,0x0820
    41 00007C5D 8E C0                           		MOV		ES,AX
    42 00007C5F B5 00                           		MOV		CH,0			; 柱面0
    43 00007C61 B6 00                           		MOV		DH,0			; 磁头0
    44 00007C63 B1 02                           		MOV		CL,2			; 扇区2，第一个扇区用作制作启动区了
    45 00007C65                                 
    46 00007C65                                 readloop:
    47 00007C65                                 		
    48 00007C65 BE 0000                         	    MOV		SI,0			; 记录失败次数的寄存器
    49 00007C68                                 		
    50 00007C68                                 		
    51 00007C68                                 	   
    52 00007C68                                 retry:
    53 00007C68 B4 02                           		MOV		AH,0x02			; AH=0x02 : 读入磁盘 
    54 00007C6A B0 01                           		MOV		AL,1			; 1个扇区
    55 00007C6C BB 0000                         		MOV		BX,0			
    56 00007C6F B2 00                           		MOV		DL,0x00			; A驱动器
    57 00007C71 CD 13                           		INT		0x13			; 调用磁盘BIOS 判断是否发生错误
    58 00007C73 73 10                           		JNC		next			; 没出错的话就跳转到next
    59 00007C75 83 C6 01                        		ADD		SI,1			; 往SI 加 1
    60 00007C78 83 FE 05                        		CMP		SI,5			; 比较SI 和 5
    61 00007C7B 73 32                           		JAE		error			; SI >= 5时，跳转到error
    62 00007C7D B4 00                           		MOV		AH,0x00
    63 00007C7F B2 00                           		MOV		DL,0x00			; A 驱动器
    64 00007C81 CD 13                           		INT		0x13			; 重置驱动器
    65 00007C83 EB E3                           		JMP		retry
    66 00007C85                                 next:
    67 00007C85 8C C0                           		MOV		AX,ES			; 把内存地址后移0x200,往后移动一个扇区512B换成16进制是0x200
    68 00007C87 05 0020                         		ADD		AX,0x0020
    69 00007C8A 8E C0                           		MOV		ES,AX			; 扇区移动了,同样的缓冲地址也需要更新，因为没有ADD ES,
    70 00007C8C                                 								; 0x200指令，所以这里以这种方式实现累加ES（更新ES）的目的
    71 00007C8C 80 C1 01                        		ADD		CL,1			; 往CL里加1,扇区是第二个扇区了鸭
    72 00007C8F 80 F9 12                        		CMP		CL,18			; 比较CL与18
    73 00007C92 76 D1                           		JBE		readloop		; 如果CL <= 18 跳转至readloop
    74 00007C94 B1 01                           		MOV		CL,1
    75 00007C96 80 C6 01                        		ADD		DH,1
    76 00007C99 80 FE 02                        		CMP		DH,2
    77 00007C9C 72 C7                           		JB		readloop		; 如果DH < 2,则跳转到readloop
    78 00007C9E B6 00                           		MOV		DH,0
    79 00007CA0 80 C5 01                        		ADD		CH,1
    80 00007CA3 80 FD 0A                        		CMP		CH,CYLS
    81 00007CA6 72 BD                           		JB		readloop		; 如果CH < CYLS,则跳转到readloop
    82 00007CA8                                 		
    83 00007CA8                                 ; ipl的结束地址告诉haribote.sys
    84 00007CA8                                 
    85 00007CA8 88 2E 0FF0                      		MOV		[0x0ff0],CH		; IPL的结束地址(将CYLS的值写到内存地址0x0ff0中)
    86 00007CAC E9 4551                         		JMP		0xc200
    87 00007CAF                                 error:
    88 00007CAF BE 7CC7                         		MOV		SI,msg
    89 00007CB2                                 putloop:
    90 00007CB2 8A 04                           		MOV		AL,[SI]
    91 00007CB4 83 C6 01                        		ADD		SI,1			; 把SI地址的一个字节的内容读入AL中
    92 00007CB7 3C 00                           		CMP		AL,0            ; 比较AL是否等于0
    93 00007CB9 74 09                           		JE		fin				; 如果比较的结果成立，则跳转到fin,fin是一个标号，表示“结束”
    94 00007CBB B4 0E                           		MOV		AH,0x0e			; 显示一个文字
    95 00007CBD BB 000F                         		MOV		BX,15			; 指定字符颜色
    96 00007CC0 CD 10                           		INT		0x10			; 调用显卡BIOS，INT 是一个中断指令，这里可以暂时理解为“函数调用”
    97 00007CC2 EB EE                           		JMP		putloop
    98 00007CC4                                 		
    99 00007CC4                                 fin:
   100 00007CC4 F4                              		HLT						; 让CPU停止，等待指令，让CPU进入待机
   101 00007CC5 EB FD                           		JMP		fin				; 无限循环
   102 00007CC7                                 msg:
   103 00007CC7 0A 0A                           		DB		0x0a, 0x0a		; 换行两次
   104 00007CC9 6C 6F 61 64 20 65 72 72 6F 72   		DB		"load error"
   105 00007CD3 0A                              		DB		0x0a			; 换行
   106 00007CD4 00                              		DB		0
   107 00007CD5                                 
   108 00007CD5 00 00 00 00 00 00 00 00 00 00   		RESB	0x7dfe-$		; 从0x7dfe地址开始用0x00填充
       00007CDF 00 00 00 00 00 00 00 00 00 00 
       00007CE9 00 00 00 00 00 00 00 00 00 00 
       00007CF3 00 00 00 00 00 00 00 00 00 00 
       00007CFD 00 00 00 00 00 00 00 00 00 00 
       00007D07 00 00 00 00 00 00 00 00 00 00 
       00007D11 00 00 00 00 00 00 00 00 00 00 
       00007D1B 00 00 00 00 00 00 00 00 00 00 
       00007D25 00 00 00 00 00 00 00 00 00 00 
       00007D2F 00 00 00 00 00 00 00 00 00 00 
       00007D39 00 00 00 00 00 00 00 00 00 00 
       00007D43 00 00 00 00 00 00 00 00 00 00 
       00007D4D 00 00 00 00 00 00 00 00 00 00 
       00007D57 00 00 00 00 00 00 00 00 00 00 
       00007D61 00 00 00 00 00 00 00 00 00 00 
       00007D6B 00 00 00 00 00 00 00 00 00 00 
       00007D75 00 00 00 00 00 00 00 00 00 00 
       00007D7F 00 00 00 00 00 00 00 00 00 00 
       00007D89 00 00 00 00 00 00 00 00 00 00 
       00007D93 00 00 00 00 00 00 00 00 00 00 
       00007D9D 00 00 00 00 00 00 00 00 00 00 
       00007DA7 00 00 00 00 00 00 00 00 00 00 
       00007DB1 00 00 00 00 00 00 00 00 00 00 
       00007DBB 00 00 00 00 00 00 00 00 00 00 
       00007DC5 00 00 00 00 00 00 00 00 00 00 
       00007DCF 00 00 00 00 00 00 00 00 00 00 
       00007DD9 00 00 00 00 00 00 00 00 00 00 
       00007DE3 00 00 00 00 00 00 00 00 00 00 
       00007DED 00 00 00 00 00 00 00 00 00 00 
       00007DF7 00 00 00 00 00 00 00 
   109 00007DFE                                 
   110 00007DFE 55 AA                           		DB		0x55, 0xaa
